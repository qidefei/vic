{
  "swagger": "2.0",
  "info": {
    "title": "vic-machine API",
    "description": "An API for interacting with vic-machine as a RESTful web service.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://raw.githubusercontent.com/vmware/vic/master/LICENSE"
    },
    "version": "v0.1.0"
  },
  "basePath": "/container",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Show VIC metadata",
        "responses": {
          "200": { "$ref": "#/responses/metadata" }
        },
        "security": []
      }
    },
    "/version": {
      "get": {
        "summary": "Show VIC version information",
        "produces": [
          "text/plain"
        ],
        "responses": {
          "200": { "$ref": "#/responses/version" }
        },
        "security": []
      }
    },
    "/{target}": {
      "post": {
        "summary": "Perform an action on the specified vSphere resources",
        "operationId": "",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/computeResource" },
          { "$ref": "#/parameters/target-action" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "204": { "$ref": "#/responses/success" },
          "default": { "$ref": "#/responses/error" }
        }
      }
    },
    "/{target}/vch": {
      "get": {
        "summary": "List VCHs on the target system",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/computeResource" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "200": { "$ref": "#/responses/vch-list" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "post": {
        "summary": "Create a VCH on the target system",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/vch" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "201": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      }
    },
    "/{target}/vch/{vchId}": {
      "get": {
        "summary": "Get information about the target VCH",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "200": { "$ref": "#/responses/vch" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "put": {
        "summary": "Reconfigure the target VCH",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/vch" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "202": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "patch": {
        "summary": "Reconfigure the target VCH",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/vch" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "202": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "post": {
        "summary": "Perform an action on the target VCH",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/vch-action" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "202": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "delete": {
        "summary": "Delete the target VCH",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "202": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      }
    },
    "/{target}/datacenter/{datacenter}": {
      "post": {
        "summary": "Perform an action on the specified vSphere resources",
        "operationId": "",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/datacenter" },
          { "$ref": "#/parameters/computeResource" },
          { "$ref": "#/parameters/target-action" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "204": { "$ref": "#/responses/success" },
          "default": { "$ref": "#/responses/error" }
        }
      }
    },
    "/{target}/datacenter/{datacenter}/vch": {
      "get": {
        "summary": "List VCHs in the specified datacenter of the target system",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/datacenter" },
          { "$ref": "#/parameters/computeResource" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "200": { "$ref": "#/responses/vch-list" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "post": {
        "summary": "Create a VCH on the target system",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/datacenter" },
          { "$ref": "#/parameters/vch" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "201": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      }
    },
    "/{target}/datacenter/{datacenter}/vch/{vchId}": {
      "get": {
        "summary": "Get information about the target VCH",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/datacenter" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "200": { "$ref": "#/responses/vch" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "put": {
        "summary": "Reconfigure the target VCH",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/datacenter" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/vch" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "202": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "patch": {
        "summary": "Reconfigure the target VCH",
        "consumes": [
          "application/merge-patch+json"
        ],
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/datacenter" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/vch" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "202": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "post": {
        "summary": "Perform an action on the target VCH",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/datacenter" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/vch-action" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "202": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      },
      "delete": {
        "summary": "Delete the target VCH",
        "parameters": [
          { "$ref": "#/parameters/target" },
          { "$ref": "#/parameters/datacenter" },
          { "$ref": "#/parameters/vch-id" },
          { "$ref": "#/parameters/thumbprint" }
        ],
        "responses": {
          "202": { "$ref": "#/responses/vsphere-task" },
          "default": { "$ref": "#/responses/error" }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Version": {
      "type": "string",
      "pattern": "^v[0-9]+.[0-9]+.[0-9]+-[a-z0-9]+-[0-9]+-[a-f0-9]{7,40}$"
    },
    "Bootstrap_Image": {
      "type": "string"
    },
    "Bootstrap_Image_List": {
      "type": "array",
      "items": { "$ref": "#/definitions/Bootstrap_Image" }
    },
    "Value": {
      "type": "object",
      "properties": {
        "units": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      }
    },
    "Value_Bits": {
      "type": "object",
      "allOf": [
        { "$ref" : "#/definitions/Value" }
      ],
      "properties": {
        "units": {
          "type": "string",
          "enum": [
            "bit"
          ]
        }
      }
    },
    "Value_Bytes": {
      "type": "object",
      "allOf": [
        { "$ref" : "#/definitions/Value" }
      ],
      "properties": {
        "units": {
          "type": "string",
          "enum": [
            "B",
            "KiB",
            "MiB",
            "GiB",
            "TiB",
            "PiB"
          ]
        }
      }
    },
    "Value_Hertz": {
      "type": "object",
      "allOf": [
        { "$ref" : "#/definitions/Value" }
      ],
      "properties": {
        "units": {
          "type": "string",
          "enum": [
            "Hz",
            "KHz",
            "MHz",
            "GHz"
          ]
        }
      }
    },
    "Shares": {
      "type": "object",
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "number": {
          "type": "integer"
        },
        "level": {
          "type": "string",
          "enum": [
            "high",
            "normal",
            "low"
          ]
        }
      }
    },
    "Managed_Object": {
      "type": "object",
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CIDR": {
      "type": "string",
      "pattern": "^(([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.?){4}(\/([0-9]|[1-2][0-9]|3[0-2]))?$"
    },
    "IP_Range": { "$ref": "#/definitions/CIDR" },
    "IP_Address": {
      "type": "string",
      "description": "TODO: see if this can just be a string with a format that captures IPv4 and IPv6?",
      "format": "ipv4"
    },
    "Network_Address": {
      "type": "object",
      "description": "TODO: see if this can just be a string with a format that captures IPv4, IPv6, and FQDNs?",
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "ip": { "$ref": "#/definitions/IP_Address" },
        "hostname": {
          "type": "string",
          "format": "hostname"
        }
      }
    },
    "Gateway": {
      "type": "object",
      "properties": {
        "routing_destinations": {
          "type": "array",
          "items": { "$ref": "#/definitions/IP_Range" }
        },
        "address": { "$ref": "#/definitions/IP_Address" }
      }
    },
    "Network": {
      "type": "object",
      "properties": {
        "port_group": { "$ref": "#/definitions/Managed_Object" },
        "gateway": { "$ref": "#/definitions/Gateway" },
        "nameservers": {
          "type": "array",
          "items": { "$ref": "#/definitions/IP_Address" }
        },
        "static": { "$ref": "#/definitions/Network_Address" }
      }
    },
    "Container_Network" : {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "nameservers": {
          "type": "array",
          "items": { "$ref": "#/definitions/IP_Address" }
        },
        "port_group": { "$ref": "#/definitions/Managed_Object" },
        "gateway": { "$ref": "#/definitions/Gateway" },
        "ip_ranges": {
          "type": "array",
          "items": { "$ref": "#/definitions/IP_Range" }
        }
      }
    },
    "X509_Data": {
      "type": "object",
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "pem": {
          "type": "string",
          "pattern": "^.*-----BEGIN [A-Z ]+-----\\s+[A-Za-z0-9+\/\\s]+={0,2}\\s-----END [A-Z ]+-----\\s*$"
        }
      }
    },
    "VCH": {
      "type": "object",
      "properties": {
        "version":  { "$ref": "#/definitions/Version" },
        "name": {
          "type": "string"
        },
        "compute": {
          "type": "object",
          "properties": {
            "cpu": {
              "type": "object",
              "properties": {
                "limit": { "$ref": "#/definitions/Value_Hertz" },
                "reservation": { "$ref": "#/definitions/Value_Hertz" },
                "shares": { "$ref": "#/definitions/Shares" }
              }
            },
            "memory": {
              "type": "object",
              "properties": {
                "limit": { "$ref": "#/definitions/Value_Bytes" },
                "reservation": { "$ref": "#/definitions/Value_Bytes" },
                "shares": { "$ref": "#/definitions/Shares" }
              }
            },
            "resource": { "$ref": "#/definitions/Managed_Object" }
          }
        },
        "network": {
          "type": "object",
          "properties": {
            "bridge": {
              "type": "object",
              "properties": {
                "ip_range": { "$ref": "#/definitions/IP_Range" },
                "port_group": { "$ref": "#/definitions/Managed_Object" }
              }
            },
            "client": { "$ref": "#/definitions/Network" },
            "management": { "$ref": "#/definitions/Network" },
            "public": { "$ref": "#/definitions/Network" },
            "container": {
              "type": "array",
              "items": { "$ref": "#/definitions/Container_Network" }
            }
          }
        },
        "storage": {
          "type": "object",
          "properties": {
            "image_stores": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "volume_stores": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "base_image_size": { "$ref": "#/definitions/Value_Bytes" }
          }
        },
        "security": {
          "type": "object",
          "properties": {
            "client": {
              "type": "object",
              "minProperties": 1,
              "maxProperties": 1,
              "properties": {
                "no_tls": {
                  "type": "boolean",
                  "description": "TODO: seems to also affect server"
                },
                "no_tls_verify": {
                  "type": "boolean"
                },
                "certificate_authorities": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/X509_Data" }
                }
              }
            },
            "server": {
              "type": "object",
              "description": "TODO: figure out how to ensure EITHER certificate + private_key OR generate are included",
              "properties": {
                "certificate": { "$ref": "#/definitions/X509_Data" },
                "private_key": { "$ref": "#/definitions/X509_Data" },
                "generate": {
                  "type": "object",
                  "properties": {
                    "size": { "$ref": "#/definitions/Value_Bits" },
                    "organization": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cname": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "vcenter": {
              "type": "object",
              "properties": {
                "operations_credentials": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "string",
                      "format": "password"
                    },
                    "user": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "endpoint": {
          "type": "object",
          "properties": {
            "use_resource_pool": {
              "type": "boolean"
            },
            "memory": { "$ref": "#/definitions/Value_Bytes" },
            "cpu": {
              "type": "object",
              "properties": {
                "sockets": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "registry": {
          "type": "object",
          "properties": {
            "insecure": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "whitelist": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "blacklist": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "certificate_authorities": {
              "type": "array",
              "items": { "$ref": "#/definitions/X509_Data" }
            },
            "image_fetch_proxy": {
              "type": "object",
              "properties": {
                "http": {
                  "type": "string"
                },
                "https": {
                  "type": "string"
                }
              }
            }
          }
        },
        "runtime": {
          "type": "object",
          "properties": {
            "power-state": {
              "type": "string"
            },
            "upgrade-status": {
              "type": "string"
            },
            "admin-portal": {
              "type": "string"
            },
            "docker-host": {
              "type": "string"
            }
          }
        }
      },
      "example": {
        "version": "TODO",
        "name": "Example VCH",
        "compute": {
          "cpu": {
            "limit": {
              "units": "MHz",
              "value": 8000
            },
            "reservation": {
              "units": "MHz",
              "value": 4000
            },
            "shares": {
              "level": "normal"
            }
          },
          "memory": {
            "limit": {
              "units": "GB",
              "value": 8
            },
            "reservation": {
              "units": "GB",
              "value": 4
            },
            "shares": {
              "number": 1000
            }
          },
          "resource": {
            "name": "ExampleCluster"
          }
        },
        "network": {
          "bridge": {
            "ip_range": "172.16.0.0/12",
            "port_group": {
              "name": "t1-bridge"
            }
          },
          "client": {
            "port_group": {
              "name": "ClientNetwork"
            },
            "gateway": {
              "routing_destinations": [
                "10.1.0.0/16",
                "10.2.0.0/16"
              ],
              "address": "10.0.0.1"
            },
            "static": {
              "ip": "10.0.0.2"
            }
          },
          "management": {
            "port_group": {
              "name": "ManagementNetwork"
            },
            "gateway": {
              "routing_destinations": [
                "10.1.1.0/16",
                "10.2.1.0/16"
              ],
              "address": "10.0.1.1"
            },
            "static": {
              "ip": "10.0.1.2"
            }
          },
          "public": {
            "port_group": {
              "name": "PublicNetwork"
            },
            "gateway": {
              "address": "10.0.2.1"
            },
            "static": {
              "ip": "10.0.2.2"
            }
          },
          "dns": [
            "8.8.8.8"
          ],
          "container": [
            {
              "port_group": {
                "name": "vsphere-net-dhcp"
              }
            },
            {
              "port_group": {
                "name": "vsphere-net2"
              },
              "alias": "mynetwork2",
              "ip_range": "172.16.1.0/24",
              "gateway": "172.16.1.1/16",
              "dns": "8.8.8.8"
            }
          ]
        },
        "storage": {
          "image_store": "iSCSI-nas-2",
          "volume_stores": ["iSCSI-nas-2/t1:default", "iSCSI-nas-1/t1:backup"],
          "base_image_size": {
            "units": "GB",
            "value": 8
          },
          "volumes_rm_on_delete": true
        },
        "security": {
          "client": {
            "no_tls": false,
            "no_tls_verify": false,
            "certificate_authorities": [
              {
                "pem": "-----BEGIN CERTIFICATE-----\\n...\\n-----END CERTIFICATE-----"
              }
            ]
          },
          "server": {
            "generate": {
              "size": {
                "units": "KBit",
                "value": 2
              },
              "organization": [
                "ACME, Inc."
              ],
              "cname": "Example Certificate Common Name"
            }
          },
          "vcenter": {
            "operations_credentials": {
              "user": "opsuser",
              "password": "opspassword"
            }
          }
        },
        "endpoint": {
          "use_resource_pool": false,
          "memory": {
            "units": "MB",
            "value": 2048
          },
          "vcpus": 1
        },
        "registry": {
          "insecure_registries": [
            "10.118.66.101"
          ],
          "certificate_authorities": [
            {
              "pem": "-----BEGIN CERTIFICATE-----\\n...\\n-----END CERTIFICATE-----"
            }
          ],
          "image_fetch_proxy": {
            "http": "http://registry.example.com:8080",
            "https": "http://registry.example.com:8443"
          }
        }
      }
    },
    "VCH_List_Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "upgradeStatus": {
          "type": "string"
        }
      }
    },
    "VCH_List": {
      "type": "array",
      "items": { "$ref": "#/definitions/VCH_List_Item" }
    }
  },
  "parameters": {
    "target": {
        "name": "target",
        "in": "path",
        "required": true,
        "type": "string"
    },
    "datacenter": {
      "name": "datacenter",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "target-action": {
      "name": "action",
      "in": "query",
      "description": "The action to perform on the specified vSphere resources",
      "required": true,
      "type": "string",
      "enum": [
        "firewall:allow",
        "firewall:deny"
      ]
    },
    "computeResource": {
      "name": "compute-resource",
      "in": "query",
      "description": "Compute resource path",
      "type": "string"
    },
    "thumbprint": {
      "name": "thumbprint",
      "in": "query",
      "description": "ESX or vCenter host certificate thumbprint",
      "type": "string"
    },
    "vch-id": {
      "name": "vchId",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "vch": {
      "name": "vch",
      "in": "body",
      "description": "The VCH to create",
      "required": true,
      "schema": {
        "$ref": "#/definitions/VCH"
      }
    },
    "vch-action": {
      "name": "action",
      "in": "query",
      "description": "The action to perform on a VCH",
      "required": true,
      "type": "string",
      "enum": [
        "debug",
        "upgrade"
      ]
    }
  },
  "responses": {
    "success": {
      "description": "A successful operation"
    },
    "error": {
      "description": "An error occurred",
      "schema": { "$ref": "#/definitions/Error" }
    },
    "metadata": {
      "description": "VIC metadata information",
      "schema": {
        "type": "object",
        "properties": {
          "version": { "$ref": "#/definitions/Version" },
          "bootstrap-images": { "$ref": "#/definitions/Bootstrap_Image_List" }
        }
      }
    },
    "vch": {
      "description": "A VCH",
      "schema": { "$ref": "#/definitions/VCH" }
    },
    "vch-list": {
      "description": "A list of VCHs",
      "schema": {
        "type": "object",
        "properties": {
          "vchs": { "$ref": "#/definitions/VCH_List" }
        }
      }
    },
    "vsphere-task": {
      "description": "A vSphere task",
      "schema": {
        "type": "object",
        "properties": {
          "task": {
            "type": "string",
            "format": "uri"
          }
        }
      }
    },
    "version": {
      "description": "VIC version information.",
      "schema": {
        "type": "string"
      },
      "examples": {
        "text/plain": "v1.1.0-xxx-0-000000"
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  },
  "security": [
    {"basic": []}
  ]
}
